name: Deploy ASP.NET to IIS via Self-Hosted Runner

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: [self-hosted, windows]

    steps:
    - name: Clean workspace (optional but safe)
      run: |
        $path = "$env:GITHUB_WORKSPACE"
        Write-Host "Cleaning workspace except appsettings.json..."

        Get-ChildItem -Path $path -Recurse -Force |
          Where-Object {
            $_.FullName -notlike "*appsettings.json"
          } |
          Remove-Item -Recurse -Force -ErrorAction SilentlyContinue


    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        clean: true

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.203'  # Replace with your installed .NET 9 version

    - name: Restore NuGet packages
      run: dotnet restore ./src/Electro/Ecommerce.Api/Ecommerce.Api.csproj

    - name: Build the project
      run: dotnet build ./src/Electro/Ecommerce.Api/Ecommerce.Api.csproj --configuration Release -warnasmessage:0

    - name: Publish the app
      run: dotnet publish ./src/Electro/Ecommerce.Api/Ecommerce.Api.csproj -c Release -o ./publish -warnasmessage:0

    - name: Stop IIS Website & App Pool if running
      run: |
        Import-Module WebAdministration

        $appPoolName = "ecommerce"
        $siteName = "ecommerce"

        $appPool = Get-WebAppPoolState -Name $appPoolName
        if ($appPool.Value -eq "Started") {
          Write-Host "Stopping App Pool: $appPoolName"
          Stop-WebAppPool -Name $appPoolName
        } else {
          Write-Host "App Pool already stopped: $appPoolName"
        }

        $site = Get-WebSiteState -Name $siteName
        if ($site.Value -eq "Started") {
          Write-Host "Stopping Website: $siteName"
          Stop-WebSite -Name $siteName
        } else {
          Write-Host "Website already stopped: $siteName"
        }

    - name: Deploy to IIS folder
      run: |
        $source = "$env:GITHUB_WORKSPACE\publish"
        $destination = "C:\inetpub\wwwroot\Ecommerce"

        Write-Host "Publishing from: $source"
        Write-Host "To IIS path: $destination"

        if (!(Test-Path $destination)) {
          Write-Host "Destination does not exist. Creating..."
          New-Item -ItemType Directory -Path $destination | Out-Null
        }

        Get-ChildItem -Path $destination -Recurse | Remove-Item -Force -Recurse -ErrorAction SilentlyContinue
        Copy-Item -Path "$source\*" -Destination $destination -Recurse

    - name: Start IIS Website & App Pool if stopped
      run: |
        Import-Module WebAdministration

        $appPoolName = "ecommerce"
        $siteName = "ecommerce"

        $appPool = Get-WebAppPoolState -Name $appPoolName
        if ($appPool.Value -eq "Stopped") {
          Write-Host "Starting App Pool: $appPoolName"
          Start-WebAppPool -Name $appPoolName
        } else {
          Write-Host "App Pool already running: $appPoolName"
        }

        $site = Get-WebSiteState -Name $siteName
        if ($site.Value -eq "Stopped") {
          Write-Host "Starting Website: $siteName"
          Start-WebSite -Name $siteName
        } else {
          Write-Host "Website already running: $siteName"
        }
